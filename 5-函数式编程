# !/usr/bin/env python3
# -*- coding:utf-8 -*-


print(abs(-10))


def add(x, y, f):
    return f(x)+f(y)

print(add(-2, -6, abs))


def sum_function(x, y, f):
    return f(x) + f(y)


def square(a):
    return a*a


print(sum_function(2, 3, square))

print('-----------------------------------------------------------------001')


# map()方法，接收两个参数，一个是函数和一个Iterable 。
# 作用：将传入的函数依次作用到序列的每个元素，并把结果作为新的Iterator返回。
# map()方法返回到是一个Iterator，是一个惰性序列，需要用list()方法获得所有结果并返回list。

# 计算列表中各元素的平方。
list1 = [1, 2, 3, 4, 5]


def f(x):
    return x*x

print(list(map(f, list1)))

print('-----------------------------------------------------------------002')


# reduce()方法，接收两个参数，一个是函数和一个序列，且该函数必须接收两个参数。
# 作用：将传入的函数作用到序列的元素上，把结果继续和序列的下一个元素做累积计算。


# 计算列表的和。
list1 = [1, 2, 3, 4, 5]
from functools import reduce


def f(x, y):
    return x + y

print(reduce(f, list1))


# 将列表中的数字按顺序组合成一个数，如list1=[1, 2, 3, 4, 5]，组合成一个数：12345。
def f(x, y):
    return x*10 + y

print(reduce(f, list1))

print('-----------------------------------------------------------------003')


# filter()方法，接收两个参数，一个函数和一个序列。
# 作用：将传入的函数依次作用到序列每个元素，然后根据返回值是True还是False，决定是否丢弃该元素，用于过滤序列。
# filter()方法返回到是一个Iterator，是一个惰性序列，需要用list()方法获得所有结果并返回list。
list1 = [1, 2, 3, 4, 5]


# 将列表中的偶数保留下来。
def is_oushu(n):
    return n % 2 == 0

print(list(filter(is_oushu, list1)))


# 去掉序列中的空字符串。
list2 = [1, 2, 3, 4, 5, '', '    ', 'a', 'b', 'c']


def not_empty(s):
    s = str(s)
    return s and s.strip()

print(list(filter(not_empty, list2)))

print('-----------------------------------------------------------------004')


# 使用埃式筛法计算质数。
# 首先，列出从2开始的所有自然数，构造一个序列：
# 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...
# 取序列的第一个数2，它一定是素数，然后用2把序列的2的倍数筛掉：
# 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...
# 取新序列的第一个数3，它一定是素数，然后用3把序列的3的倍数筛掉：
# 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...
# 取新序列的第一个数5，然后用5把序列的5的倍数筛掉：
# 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...
# 不断筛下去，就可以得到所有的素数。

n = 90000
list3 = []
for i in range(2, n):
    list3.append(i)

zhishu = []
while len(list3) != 0:
    i = list3[0]
    zhishu.append(i)
    def beishu(n):
        return n % i != 0
    list3 = list(filter(beishu, list3))

for i in zhishu:
    print(i)




print('-----------------------------------------------------------------005')







